/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateSeedDialog.java
 *
 * Created on Oct 24, 2010, 9:43:11 PM
 */
package se.sics.gvod.system.swing.dialogs;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.logging.Level;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.mortbay.util.URIUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import se.sics.gvod.address.Address;
import se.sics.gvod.config.BaseCommandLineConfig;
import se.sics.gvod.config.VodConfig;
import se.sics.gvod.system.swing.SwingComponent;
import se.sics.gvod.system.util.FileUtils;

/**
 *
 * @author jdowling
 */
public class CreateTorrentDialog extends javax.swing.JDialog {

    private static final Logger logger = LoggerFactory.getLogger(CreateTorrentDialog.class);
    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;
    private File videoFile;
    private final SwingComponent swingInterface;

    /**
     * Creates new form CreateSeedDialog
     */
    public CreateTorrentDialog(java.awt.Frame parent, boolean modal, SwingComponent swingInterface) {
        super(parent, modal);
        initComponents();
        this.swingInterface = swingInterface;
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        torrentFilePanel = new javax.swing.JPanel();
        selectVideoFileButton = new javax.swing.JButton();
        videoDescriptionField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        videoFilePathTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        videoWidthComboBox = new javax.swing.JComboBox();
        bootstrapPanel = new javax.swing.JPanel();
        bootstrapServerComboBox = new javax.swing.JComboBox();
        bootstrapLabel = new javax.swing.JLabel();
        optionalPanel = new javax.swing.JPanel();
        thumbnailTextField = new javax.swing.JTextField();
        testThumbnailButton = new javax.swing.JButton();
        thumbLoadingCountLabel = new javax.swing.JLabel();
        streamingConversionProgressBar = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Publish a Video");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("Share Video");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        torrentFilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Video File Details"));
        torrentFilePanel.setName("Video File"); // NOI18N

        selectVideoFileButton.setText("Select Video File");
        selectVideoFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectVideoFileButtonActionPerformed(evt);
            }
        });

        videoDescriptionField.setText("Clommunity Video-on-Demand. Make sure you have copyright to upload the video.");
        videoDescriptionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoDescriptionFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Video Description:");

        videoFilePathTextField.setText("/home/jdowling/NetBeansProjects/gvod/gvod-system/src/test/resources/topgear.mp4");
        videoFilePathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                videoFilePathTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Video size:");

        videoWidthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "320x240", "480x360", "640x320", "640x480", "800x600", "1024x768", "1280x768", "1280x1080", "1600x1080", "1920x1080" }));

        javax.swing.GroupLayout torrentFilePanelLayout = new javax.swing.GroupLayout(torrentFilePanel);
        torrentFilePanel.setLayout(torrentFilePanelLayout);
        torrentFilePanelLayout.setHorizontalGroup(
            torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(torrentFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(selectVideoFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(torrentFilePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))))
                .addGap(18, 18, 18)
                .addGroup(torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(videoFilePathTextField)
                    .addComponent(videoDescriptionField)
                    .addGroup(torrentFilePanelLayout.createSequentialGroup()
                        .addComponent(videoWidthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        torrentFilePanelLayout.setVerticalGroup(
            torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(torrentFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectVideoFileButton)
                    .addComponent(videoFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(videoDescriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(torrentFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(videoWidthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        bootstrapPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Bootstrap Server"));

        bootstrapServerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "193.10.64.216", "193.10.64.109", " " }));
        bootstrapServerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bootstrapServerComboBoxActionPerformed(evt);
            }
        });

        bootstrapLabel.setText("Select Bootstrap Server:");

        javax.swing.GroupLayout bootstrapPanelLayout = new javax.swing.GroupLayout(bootstrapPanel);
        bootstrapPanel.setLayout(bootstrapPanelLayout);
        bootstrapPanelLayout.setHorizontalGroup(
            bootstrapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bootstrapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bootstrapLabel)
                .addGap(31, 31, 31)
                .addComponent(bootstrapServerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bootstrapPanelLayout.setVerticalGroup(
            bootstrapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bootstrapPanelLayout.createSequentialGroup()
                .addGroup(bootstrapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bootstrapServerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bootstrapLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        optionalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter URL for Thumbnail of Video"));

        thumbnailTextField.setText("http://clommunity.blog.pangea.org/wp-content/ata-images/clommunity_200.png");
        thumbnailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thumbnailTextFieldActionPerformed(evt);
            }
        });

        testThumbnailButton.setText("Test Thumbnail URL");
        testThumbnailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testThumbnailButtonActionPerformed(evt);
            }
        });

        thumbLoadingCountLabel.setForeground(new java.awt.Color(239, 20, 20));

        javax.swing.GroupLayout optionalPanelLayout = new javax.swing.GroupLayout(optionalPanel);
        optionalPanel.setLayout(optionalPanelLayout);
        optionalPanelLayout.setHorizontalGroup(
            optionalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testThumbnailButton)
                .addGap(6, 6, 6)
                .addComponent(thumbLoadingCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thumbnailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        optionalPanelLayout.setVerticalGroup(
            optionalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionalPanelLayout.createSequentialGroup()
                .addGroup(optionalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testThumbnailButton)
                    .addComponent(thumbLoadingCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thumbnailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("Conversion to streaming :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(torrentFilePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bootstrapPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(streamingConversionProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(torrentFilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(optionalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bootstrapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streamingConversionProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        torrentFilePanel.getAccessibleContext().setAccessibleName("Video File");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        InputStream is = null;
        OutputStream os = null;

        try {
            // TODO - check if the video already exists at the Bootstrap Server
            // If yes, then ask the user to put in another name

            Address b = BaseCommandLineConfig.getBootstrapServer();
            if (b == null) {
                return;
            }
            int port = b.getPort();
            String videoSize = (String) videoWidthComboBox.getSelectedItem();
            StringTokenizer st = new StringTokenizer(videoSize, "x");
            String videoWidth = st.nextToken();
            String videoHeight = st.nextToken();

            int width = Integer.parseInt(videoWidth);
            int height = Integer.parseInt(videoHeight);

            String filename = videoFilePathTextField.getText();
            String videoDescription = videoDescriptionField.getText();
            String imageUrl = thumbnailTextField.getText();
            File f = new File(filename);
            if (filename == null || f.exists() == false) {
                // TODO - alert
            } else if (videoDescription == null || videoDescription.compareTo("") == 0
                    || videoDescription.length() < 6) {
                JFrame frame = new JFrame("Upload error");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                JOptionPane.showMessageDialog(frame,
                        "Please enter a video description", "Upload error", JOptionPane.ERROR_MESSAGE);
            } else {
                boolean torrentOk = swingInterface.createStream(getServerName(),
                        port,
                        getServerName(),
                        port + 1,
                        filename,
                        videoDescription,
                        imageUrl,
                        width, height,
                        "Error when creating stream",
                        streamingConversionProgressBar
                );
                if (!torrentOk) {
                    // TODO - alert that this name is already taken...
                } else {
                    doClose(RET_OK);
                }
            }

        } catch (IOException ex) {
            JFrame frame = new JFrame("Error");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            JOptionPane.showMessageDialog(frame,
                    ex.getMessage(), "Gvod error", JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(CreateTorrentDialog.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (is != null) {
                    is.close();
                }
                if (os != null) {
                    os.close();
                }

                doClose(RET_OK);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(CreateTorrentDialog.class.getName()).log(Level.SEVERE, null, ex);

            }
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void selectVideoFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectVideoFileButtonActionPerformed

        String videoDir = VodConfig.getVideoDir();
        final JFileChooser fc = new JFileChooser(videoDir);

        FileFilter filter = new FileNameExtensionFilter("Video files", "flv", "mp4");
        fc.addChoosableFileFilter(filter);
        fc.setFileFilter(filter);

        int returnVal = fc.showDialog(this, "Select a .mp4 or .flv file.");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            videoFile = fc.getSelectedFile();
            try {
                videoFilePathTextField.setText(videoFile.getCanonicalPath().toString());
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(CreateTorrentDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            //This is where a real application would open the file.
            logger.debug("Opening: " + videoFile.getName() + ".");
        } else {
            logger.debug("Open command cancelled by user.");
        }
    }//GEN-LAST:event_selectVideoFileButtonActionPerformed

    private void testThumbnailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testThumbnailButtonActionPerformed
        String thumbnailUrl = thumbnailTextField.getText();
        try {
            URL url = new java.net.URL(thumbnailUrl);
            String filename = url.getFile();
            int postFixIndex = filename.lastIndexOf(".");
            int fileIndex = filename.lastIndexOf("/");
            File iconFile = File.createTempFile(filename.substring(fileIndex, postFixIndex), filename.substring(postFixIndex));
            BufferedInputStream in = new BufferedInputStream(url.openStream());
            FileOutputStream fos = new java.io.FileOutputStream(iconFile);
            BufferedOutputStream bout = new BufferedOutputStream(fos, 1024);
            byte[] data = new byte[1024];
            int x = 0;
            int t = 0;
            while ((x = in.read(data, 0, 1024)) >= 0) {
                thumbLoadingCountLabel.setText(Integer.toString(t++));
                bout.write(data, 0, x);
            }
            bout.close();
            in.close();

            ImageIcon thumbnailIcon = new ImageIcon(iconFile.getAbsolutePath());
            ThumbnailDialog td = new ThumbnailDialog(null, true, thumbnailIcon);
            td.pack();
            td.setVisible(true);

        } catch (MalformedURLException ex) {
            java.util.logging.Logger.getLogger(CreateTorrentDialog.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Malformed URL for the thumbail: " + thumbnailUrl
                    + " Error msg: " + ex.getLocalizedMessage());
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(CreateTorrentDialog.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Problem downloading the thumbail with URL: " + thumbnailUrl
                    + " Error msg: " + ex.getLocalizedMessage());
        }

    }//GEN-LAST:event_testThumbnailButtonActionPerformed

    private void bootstrapServerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bootstrapServerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bootstrapServerComboBoxActionPerformed

    private void videoFilePathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoFilePathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_videoFilePathTextFieldActionPerformed

    private void thumbnailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thumbnailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thumbnailTextFieldActionPerformed

    private void videoDescriptionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_videoDescriptionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_videoDescriptionFieldActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bootstrapLabel;
    private javax.swing.JPanel bootstrapPanel;
    private javax.swing.JComboBox bootstrapServerComboBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel optionalPanel;
    private javax.swing.JButton selectVideoFileButton;
    private javax.swing.JProgressBar streamingConversionProgressBar;
    private javax.swing.JButton testThumbnailButton;
    private javax.swing.JLabel thumbLoadingCountLabel;
    private javax.swing.JTextField thumbnailTextField;
    private javax.swing.JPanel torrentFilePanel;
    private javax.swing.JTextField videoDescriptionField;
    private javax.swing.JTextField videoFilePathTextField;
    private javax.swing.JComboBox videoWidthComboBox;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;

    private String getVideoFile() throws IOException {
        return videoFile.getCanonicalPath();
    }

    private String getServerName() {
        return bootstrapServerComboBox.getSelectedItem().toString();
    }
}
